// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "views"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [timescaledb, vector]
}


model conversation {
  id                    String    @db.Uuid
  createdAt             DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt             DateTime  @updatedAt
  userId                String    @db.Uuid
  context               Json
  state                 String
  flowId                String
  feedback              feedback?
  @@unique([id])
}

model User {
  id           String   @id @db.Uuid
  createdAt    DateTime @default(now())
  identifier   String?
  isVerified   Boolean  @default(false)
  messages     Message[]
}

model Message {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  text            String?
  audio           String?
  type            String
  userId          String   @db.Uuid
  user            User     @relation(fields: [userId], references: [id])
  flowId          String
  reaction        Int       @default(0) @db.SmallInt 
  messageType     String?
}

model Metrics {
  id              Int @id @default(autoincrement())
  createdAt       DateTime @default(now())
  name            String @unique
  value           String
}

model feedback {
  id                      Int             @id @default(autoincrement())
  conversation            conversation?   @relation(fields: [conversationId], references: [id])
  conversationId          String?         @db.Uuid @unique
  translation             Int             @default(0) @db.SmallInt 
  information             Int             @default(0) @db.SmallInt
  chatbotFunctionality    Int             @default(0) @db.SmallInt
  feedback                String?
}

model Scheme {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  questions   MainQuestion[]
}

model MainQuestion {
  id          Int         @id @default(autoincrement())
  intent      String
  question    String
  response    String
  schemeId    Int?        // Make schemeId optional
  scheme      Scheme?     @relation(fields: [schemeId], references: [id])
  variations  Variations[]
}

model Variations {
  id             Int          @id @default(autoincrement())
  variation      String
  mainQuestionId Int
  mainQuestion   MainQuestion @relation(fields: [mainQuestionId], references: [id])
}